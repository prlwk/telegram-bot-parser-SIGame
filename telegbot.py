import pandas as pd
import telebot
from telebot import types
import random

data_frame = pd.read_excel('./tablee.xlsx', engine="openpyxl")
data = data_frame.to_dict('index')
data_list_tmp = []
for i in range(0, len(data)):
    data_list_tmp.append(data[i])
data_list = []
for i in range(0, len(data)):

    data_list.append(
            {
                "–ù–∞–∑–≤–∞–Ω–∏–µ": data_list_tmp[i]['–ù–∞–∑–≤–∞–Ω–∏–µ'],
                "–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ä–∞—É–Ω–¥–æ–≤": data_list_tmp[i]['–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ä–∞—É–Ω–¥–æ–≤'],
                "–°–ø–∏—Å–æ–∫ —Ä–∞—É–Ω–¥–æ–≤": data_list_tmp[i]['–°–ø–∏—Å–æ–∫ —Ä–∞—É–Ω–¥–æ–≤'].strip().split('; '),
                "–°–ø–∏—Å–æ–∫ —Ç–µ–º": data_list_tmp[i]['–°–ø–∏—Å–æ–∫ —Ç–µ–º'].strip().split('; '),
                "–°—Å—ã–ª–∫–∞ –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è": data_list_tmp[i]['–°—Å—ã–ª–∫–∞ –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è']
            }
        )


bot = telebot.TeleBot('1875185462:AAE3fB4u58Omv7ld3nWUbs6ndjdTpHa5SlQ')

MARKUP = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)
ITEM1 = types.KeyboardButton('üìÑ –ü–æ–ª—É—á–∏—Ç—å —Ç–∞–±–ª–∏—Ü—É')
ITEM2 = types.KeyboardButton('‚ùì –†–∞–Ω–¥–æ–º–Ω—ã–π –ø–∞–∫')
ITEM3 = types.KeyboardButton('üîé –ü–æ–∏—Å–∫ –ø–∞–∫–∞')
ITEM4 = types.KeyboardButton('‚ùó –ü–æ–º–æ—â—å')
MARKUP.add(ITEM1, ITEM2, ITEM3, ITEM4)


@bot.message_handler(commands=['start'])
def start(message):
    bot.send_message(message.chat.id, "–ü—Ä–∏–≤–µ—Ç, {0.first_name}! –Ø —Å —É–¥–æ–≤–æ–ª—å—Å—Ç–≤–∏–µ–º –ø–æ–º–æ–≥—É —Ç–µ–±–µ –Ω–∞–π—Ç–∏ –ø–∞–∫–µ—Ç—ã –¥–ª—è –°–≤–æ–µ–π "
                                      "–ò–≥—Ä—ã.".format(message.from_user), reply_markup=MARKUP)


@bot.callback_query_handler(func=lambda call: True)
def ans(call):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)
    item1 = types.KeyboardButton('–í–µ—Ä–Ω—É—Ç—å—Å—è –∫ –ø–æ–∏—Å–∫—É')
    item2 = types.KeyboardButton('–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é')
    markup.add(item1, item2)
    if 0 < int(call.data) < len(data_list):
        bot.send_message(call.message.chat.id, "–¢—ã —Ä–µ—à–∏–ª —É–∑–Ω–∞—Ç—å —Å–ø–∏—Å–æ–∫ —Ç–µ–º –¥–ª—è –ø–∞–∫–∞ —Å –Ω–∞–∑–≤–∞–Ω–∏–µ–º " +
                         data_list[int(call.data)]['–ù–∞–∑–≤–∞–Ω–∏–µ'])
        string = 'üìå –°–ø–∏—Å–æ–∫ —Ç–µ–º: \n'
        for j in range(0, len(data_list[int(call.data)]['–°–ø–∏—Å–æ–∫ —Ç–µ–º'])):
            string = string + "‚ÄÉ" + data_list[int(call.data)]['–°–ø–∏—Å–æ–∫ —Ç–µ–º'][j] + '\n'
        msg = bot.send_message(call.message.chat.id, string, reply_markup=markup)
        bot.register_next_step_handler(msg, answer2)


@bot.message_handler(content_types=['text'])
def get_text_messages(message):
    if message.text.lower() == "–ø—Ä–∏–≤–µ—Ç":
        bot.send_message(message.chat.id, "–ü—Ä–∏–≤–µ—Ç, —á–µ–º —è –º–æ–≥—É —Ç–µ–±–µ –ø–æ–º–æ—á—å?")
    elif message.text == "üìÑ –ü–æ–ª—É—á–∏—Ç—å —Ç–∞–±–ª–∏—Ü—É":
        bot.send_message(message.chat.id, "–£–¥–∞—á–Ω–æ–π –∏–≥—Ä—ã! –ï—Å–ª–∏ —Ç–µ–±–µ –ª–µ–Ω—å –∏—Å–∫–∞—Ç—å –ø–∞–∫ —Å–∞–º–æ–º—É, —Ç–æ —Ç—ã –º–æ–∂–µ—à—å –≤–æ—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è"
                                          " –¥—Ä—É–≥–∏–º–∏ –º–æ–∏–º–∏ —Ñ—É–Ω–∫—Ü–∏—è–º–∏!")
        file = open('tablee.xlsx', 'rb')
        bot.send_document(message.chat.id, file)
    elif message.text == '‚ùì –†–∞–Ω–¥–æ–º–Ω—ã–π –ø–∞–∫':
        k = random.randint(0, len(data_list))
        a = data_list[k]
        string = "‚ñ™–ù–∞–∑–≤–∞–Ω–∏–µ –ø–∞–∫–µ—Ç–∞: " + a['–ù–∞–∑–≤–∞–Ω–∏–µ'] + '\n' + "‚ñ´–°—Å—ã–ª–∫–∞ –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è: " + a["–°—Å—ã–ª–∫–∞ –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è"] + \
                 '\n' + "‚ñ™–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ä–∞—É–Ω–¥–æ–≤: " + str(a['–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ä–∞—É–Ω–¥–æ–≤']) + '\n' + "‚ñ´–°–ø–∏—Å–æ–∫ —Ä–∞—É–Ω–¥–æ–≤:" + "\n"
        for i in range(0, a['–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ä–∞—É–Ω–¥–æ–≤']):
            string = string + "‚ÄÉ" + a['–°–ø–∏—Å–æ–∫ —Ä–∞—É–Ω–¥–æ–≤'][i] + '\n'
        bot.send_message(message.chat.id, string)
        s = 'üìå –°–ø–∏—Å–æ–∫ —Ç–µ–º: \n'
        for j in range(0, len(a["–°–ø–∏—Å–æ–∫ —Ç–µ–º"])):
            s = s + "‚ÄÉ" + a['–°–ø–∏—Å–æ–∫ —Ç–µ–º'][j] + '\n'
        bot.send_message(message.chat.id, s)
    elif message.text == "üîé –ü–æ–∏—Å–∫ –ø–∞–∫–∞":
        rmk = types.ReplyKeyboardMarkup(resize_keyboard=True)
        rmk.add(types.KeyboardButton('üîô –ù–∞–∑–∞–¥'))
        msg = bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ —Å–ª–æ–≤–æ –¥–ª—è –ø–æ–∏—Å–∫–∞ –ø–∞–∫–∞", reply_markup=rmk)
        bot.register_next_step_handler(msg, search)
    elif message.text == "üîô –ù–∞–∑–∞–¥":
        bot.send_message(message.chat.id, "üîô –ù–∞–∑–∞–¥", reply_markup=MARKUP)
    elif message.text == "‚ùó –ü–æ–º–æ—â—å" or message.text == "/help":
        bot.send_message(message.chat.id, """ü§ñ –Ø - –±–æ—Ç, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–º–æ–∂–µ—Ç —Ç–µ–±–µ —Å –ø–æ–∏—Å–∫–æ–º –ø–∞–∫–µ—Ç–æ–≤ —Å –≤–æ–ø—Ä–æ—Å–∞–º–∏ –¥–ª—è –°–≤–æ–µ–π –ò–≥—Ä—ã.
–ï—Å–ª–∏ —Ç—ã –≤—ã–±–µ—Ä–µ—à—å:
   üìÑ –ü–æ–ª—É—á–∏—Ç—å —Ç–∞–±–ª–∏—Ü—É - —è –æ—Ç–ø—Ä–∞–≤—é —Ç–µ–±–µ –≤—Å–µ –ø–∞–∫–∏, –∫–æ—Ç–æ—Ä—ã–µ —É –º–µ–Ω—è –µ—Å—Ç—å –≤ –≤–∏–¥–µ —Ç–∞–±–ª–∏—Ü—ã Excel
   ‚ùì –†–∞–Ω–¥–æ–º–Ω—ã–π –ø–∞–∫ - —è –æ—Ç–ø—Ä–∞–≤–ª—é —Ç–µ–±–µ –ø–∞–∫–µ—Ç —Å –≤–æ–ø—Ä–æ—Å–∞–º–∏ –Ω–∞ —Å–≤–æ–π –≤–∫—É—Å
   üîé –ü–æ–∏—Å–∫ –ø–∞–∫–∞ - –º—ã —Å —Ç–æ–±–æ–π —Å–º–æ–∂–µ–º –Ω–∞–π—Ç–∏ –ø–∞–∫–µ—Ç —Å –ø–æ–º–æ—â—å—é –∫–ª—é—á–µ–≤–æ–≥–æ —Å–ª–æ–≤–∞, –∫–æ—Ç–æ—Ä–æ–µ —Ç—ã –º–Ω–µ –æ—Ç–ø—Ä–∞–≤–∏—à—å

–í—ã–±–µ—Ä–∏, —á—Ç–æ —Ç—ã —Ö–æ—á–µ—à—å —Å–¥–µ–ª–∞—Ç—å, –≤ –º–µ–Ω—é:)""", reply_markup=MARKUP)
    else:
        bot.send_message(message.chat.id, "–Ø —Ç–µ–±—è –Ω–µ –ø–æ–Ω–∏–º–∞—é. –ù–∞–ø–∏—à–∏ /help.")


def search(message):
    if message.text == "üîô –ù–∞–∑–∞–¥":
        bot.send_message(message.chat.id, "üîô –ù–∞–∑–∞–¥", reply_markup=MARKUP)
    else:
        if len(message.text) < 3:
            msg = bot.send_message(message.chat.id, "–î–ª—è –ø–æ–∏—Å–∫–∞ –≤–≤–µ–¥–∏—Ç–µ 3 –∏–ª–∏ –±–æ–ª–µ–µ —Å–∏–º–≤–æ–ª–∞")
            bot.register_next_step_handler(msg, search)
        else:
            list_of_pac = []
            for i in range(0, len(data_list)):
                words = ''
                for j in range(0, int(data_list[i]["–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ä–∞—É–Ω–¥–æ–≤"])):
                    words += data_list[i]['–°–ø–∏—Å–æ–∫ —Ä–∞—É–Ω–¥–æ–≤'][j] + ' '
                if message.text.lower() in data_list[i]["–ù–∞–∑–≤–∞–Ω–∏–µ"].lower():
                    list_of_pac.append({'–ü–∞–∫': data_list[i], '–ù–æ–º–µ—Ä –≤ —Å–ø–∏—Å–∫–µ': i})
                elif message.text.lower() in words.lower():
                    list_of_pac.append({'–ü–∞–∫': data_list[i], '–ù–æ–º–µ—Ä –≤ —Å–ø–∏—Å–∫–µ': i})
            if len(list_of_pac) == 0:
                markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)
                item1 = types.KeyboardButton('–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å –ø–æ–∏—Å–∫')
                item2 = types.KeyboardButton('–í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é')
                markup.add(item1, item2)
                msg = bot.send_message(message.chat.id,
                                       "–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –ø–∞–∫–∏ —Å —Ç–∞–∫–∏–º —Å–ª–æ–≤–æ–º –Ω–µ –±—ã–ª–∏ –Ω–∞–π–¥–µ–Ω—ã. –ú–æ–∂–µ—à—å –ø–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å "
                                       "–µ—â–µ —Ä–∞–∑!", reply_markup=markup)
                bot.register_next_step_handler(msg, answer)
            else:
                for i in range(0, len(list_of_pac)):
                    string = "‚ñ™–ù–∞–∑–≤–∞–Ω–∏–µ –ø–∞–∫–µ—Ç–∞: " + list_of_pac[i]['–ü–∞–∫'][
                        '–ù–∞–∑–≤–∞–Ω–∏–µ'] + '\n' + "‚ñ´–°—Å—ã–ª–∫–∞ –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è: " + \
                             list_of_pac[i]['–ü–∞–∫']["–°—Å—ã–ª–∫–∞ –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è"] + '\n' + "‚ñ™–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ä–∞—É–Ω–¥–æ–≤: " + \
                             str(list_of_pac[i]['–ü–∞–∫']['–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ä–∞—É–Ω–¥–æ–≤']) + '\n' + "‚ñ´–°–ø–∏—Å–æ–∫ —Ä–∞—É–Ω–¥–æ–≤:" + "\n"
                    for j in range(0, list_of_pac[i]['–ü–∞–∫']['–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ä–∞—É–Ω–¥–æ–≤']):
                        string = string + "‚ÄÉ" + list_of_pac[i]['–ü–∞–∫']['–°–ø–∏—Å–æ–∫ —Ä–∞—É–Ω–¥–æ–≤'][j] + '\n'
                    markup_inline = types.InlineKeyboardMarkup()
                    item1 = types.InlineKeyboardButton(text="–£–∑–Ω–∞—Ç—å —Ç–µ–º—ã",
                                                       callback_data=str(list_of_pac[i]['–ù–æ–º–µ—Ä –≤ —Å–ø–∏—Å–∫–µ']))
                    markup_inline.add(item1)
                    bot.send_message(message.chat.id, string, reply_markup=markup_inline)
                markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)
                item1 = types.KeyboardButton('–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å –ø–æ–∏—Å–∫')
                item2 = types.KeyboardButton('–í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é')
                markup.add(item1, item2)
                msg = bot.send_message(message.chat.id, "‚è∞ –ü–æ–∏—Å–∫ –æ–∫–æ–Ω—á–µ–Ω", reply_markup=markup)
                bot.register_next_step_handler(msg, answer)


def answer(message):
    if message.text == "–í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é":
        bot.send_message(message.chat.id, "–í–æ–∑–≤—Ä–∞—â–∞—é—Å—å –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", reply_markup=MARKUP)
    elif message.text == '–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å –ø–æ–∏—Å–∫':
        rmk = types.ReplyKeyboardMarkup(resize_keyboard=True)
        rmk.add(types.KeyboardButton('üîô –ù–∞–∑–∞–¥'))
        msg = bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ —Å–ª–æ–≤–æ –¥–ª—è –ø–æ–∏—Å–∫–∞ –ø–∞–∫–∞", reply_markup=rmk)
        bot.register_next_step_handler(msg, search)


def answer2(message):
    if message.text == "–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é":
        bot.send_message(message.chat.id, "–í–æ–∑–≤—Ä–∞—â–∞—é—Å—å –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", reply_markup=MARKUP)
    elif message.text == '–í–µ—Ä–Ω—É—Ç—å—Å—è –∫ –ø–æ–∏—Å–∫—É':
        rmk = types.ReplyKeyboardMarkup(resize_keyboard=True)
        rmk.add(types.KeyboardButton('üîô –ù–∞–∑–∞–¥'))
        msg = bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ —Å–ª–æ–≤–æ –¥–ª—è –ø–æ–∏—Å–∫–∞ –ø–∞–∫–∞", reply_markup=rmk)
        bot.register_next_step_handler(msg, search)


bot.polling(none_stop=True, interval=0)
